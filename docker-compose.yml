services:
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8080:8080"

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.4
    ports:
      - "8181:8181"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME: keycloak
      KC_HTTP_PORT: 8181
      KC_HOSTNAME_ADMIN_URL: http://localhost:8181
    command: start-dev
    mem_limit: 4096m

  product-service:
    build:
      context: .
      dockerfile: product-service/Dockerfile
    ports:
      - "80"
    depends_on:
      - product-db
    environment:
      MONGODB_URI: mongodb://product-db:27017/product-db
      PORT: 80

  order-service:
    build:
      context: .
      dockerfile: order-service/Dockerfile
    ports:
      - "80"
    environment:
      POSTGRES_URL: jdbc:postgresql://postgres-db:5432/order-db
      INVENTORY_SERVICE_URL: http://inventory-service
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      PORT: 80
    depends_on:
      - postgres-db

  inventory-service:
    build:
      context: .
      dockerfile: inventory-service/Dockerfile
    ports:
      - "80"
    environment:
      POSTGRES_URL: jdbc:postgresql://postgres-db:5432/inventory-db
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      PORT: 80
    depends_on:
      - postgres-db

  product-db:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - product-db-volume:/data/db

  postgres-db:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

volumes:
  product-db-volume:
  postgres-db-volume: